-- Indexes for {{ relationship.type }} relationships from {{ table_name }}
{% set column_names = module.model.column_analysis | map(attribute='sql_column_name') | list %}

-- Index on relationship properties
{% if relationship.properties %}
{% for prop_key in relationship.properties.keys() %}
CREATE INDEX IF NOT EXISTS idx_{{ table_name }}_{{ relationship.type|lower }}_{{ prop_key }}
ON {{ project_name }}."{{ relationship.type }}" USING btree ((properties->>'{{ prop_key }}'));
{% endfor %}
{% endif %}

-- Index on data properties
{% if 'year' in column_names %}
CREATE INDEX IF NOT EXISTS idx_{{ table_name }}_{{ relationship.type|lower }}_year
ON {{ project_name }}."{{ relationship.type }}" USING btree ((properties->>'year'));
{% endif %}

{% if 'element_code_id' in column_names %}
CREATE INDEX IF NOT EXISTS idx_{{ table_name }}_{{ relationship.type|lower }}_element
ON {{ project_name }}."{{ relationship.type }}" USING btree ((properties->>'element_code_id'));
{% endif %}

{% if 'value' in column_names %}
CREATE INDEX IF NOT EXISTS idx_{{ table_name }}_{{ relationship.type|lower }}_value
ON {{ project_name }}."{{ relationship.type }}" USING btree ((properties->>'value'));
{% endif %}

-- Compound index for common query patterns
CREATE INDEX IF NOT EXISTS idx_{{ table_name }}_{{ relationship.type|lower }}_compound
ON {{ project_name }}."{{ relationship.type }}" USING GIN (properties);

-- Source dataset index for filtering
CREATE INDEX IF NOT EXISTS idx_{{ table_name }}_{{ relationship.type|lower }}_source
ON {{ project_name }}."{{ relationship.type }}" USING btree ((properties->>'source_dataset'));